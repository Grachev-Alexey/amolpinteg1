Веб-приложение, которое представляет собой конструктор для продвинутой, условной и двусторонней интеграции между AmoCRM и LPTracker. Приложение должно быть многопользовательским, с регистрацией и личным кабинетом.
Ключевые требования:
Дизайн и UX/UI: Современный, интуитивно понятный интерфейс. Приложение должно быть выполнено строго и только в темной теме. Анимации и переходы должны быть плавными и улучшать пользовательский опыт.
Язык интерфейса: Приложение должно быть полностью на русском языке. Весь пользовательский интерфейс, включая метки, кнопки, сообщения об ошибках и подсказки, должен быть на русском.
Технологический стек:
Backend: Node.js + фреймворк Express.js.
Frontend: React (с использованием Vite или Create React App).
База данных: PostgreSQL.
Подробные требования к реализации:
Backend:
Управление данными и хранение:
Система должна надежно хранить следующие данные:
Данные пользователей для входа в систему (email, хеш пароля).
Учетные данные для подключения к внешним сервисам (AmoCRM, LPTracker) для каждого пользователя. API-ключи должны храниться в зашифрованном виде.
Кэшированные метаданные из AmoCRM (списки полей, воронок, статусов) для каждого пользователя, с возможностью их обновления по запросу.
Настраиваемые пользователем правила синхронизации. Каждое правило должно содержать набор условий (триггеров) и действий (маппинг полей).
Информацию о загруженных XLSX файлах и статусе их обработки.
Результаты прозвонов, полученные из внешней системы, и статус их синхронизации с AmoCRM.
Подробные логи всех операций для отладки.
Подключение к AmoCRM:
Пользователь вводит в интерфейсе свои учетные данные AmoCRM (поддомен, долгосрочный ключ).
Система должна подключиться к API AmoCRM, получить и сохранить в кэше все доступные воронки, статусы и поля (сделок, контактов). Должна быть функция для принудительного обновления этого кэша.
Подключение к LPTracker:
Реализуй внутренний механизм, который позволит администратору приложения привязывать учетные данные LPTracker к аккаунтам пользователей.
Конструктор правил синхронизации (Ядро системы):
Реализуй API для создания, чтения, обновления и удаления правил синхронизации.
Создай универсальный эндпоинт для приема вебхуков от AmoCRM и LPTracker.
Логика обработки: При получении вебхука система должна найти подходящее правило пользователя, проверить, выполняются ли все условия (например, "сделка в воронке N" И "значение поля X равно 'Краснодар'"), и если да — выполнить указанные действия (например, "создать заявку в LPTracker", заполнив поля согласно настроенному маппингу).
Функционал загрузки XLSX и обработки результатов прозвона:
Реализуй API для загрузки XLSX-файла и приема данных о результатах прозвона, с обработкой в фоновом режиме и последующей передачей данных в целевые CRM.
Часть 2: Frontend (React)
Общие требования к дизайну:
Тема: Приложение должно быть реализовано исключительно в темной теме. Цветовая палитра должна быть подобрана для комфортной работы (например, оттенки темно-серого №1a1a1a, №2b2b2b, с акцентными цветами — синий или фиолетовый).
UX/UI: Интерфейс должен быть современным, чистым и плавным. Используй качественную библиотеку компонентов, такую как Material-UI (MUI) или Ant Design (AntD), полностью настроенную под темную тему. Все интерактивные элементы должны иметь плавные переходы (transitions).
Локализация: Все элементы интерфейса, тексты, кнопки и сообщения должны быть на русском языке.
Структура страниц:
Страница "Настройки": Компонент для подключения к AmoCRM, отображения статуса подключения и кнопка для обновления метаданных (полей, воронок).
Страница "Конструктор правил": Интерфейс для управления правилами. Форма создания/редактирования правила должна быть интуитивно понятной и позволять пользователю легко конструировать логику "ЕСЛИ (условия) -> ТО (действия)".
Страница "Загрузка контактов": Простой интерфейс для загрузки XLSX-файла и просмотра истории загрузок.
Страница "Результаты прозвона": Таблица с результатами прозвонов с возможностью поиска и фильтрации.
Страница "Логи": Удобное отображение логов операций для отслеживания работы интеграции.